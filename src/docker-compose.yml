version: '3.4'

services: 
  discountdb:
    image: postgres
    container_name: discountdb
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=DiscountDb
    ports:
      - "5432:5432" 
    volumes:
     - postgres_data:/var/lib/postgresql/data
  orderdb:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    container_name: orderdb
    environment:
        SA_PASSWORD: "SwN12345678"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"
  catalogdb:
    image: mongo
    container_name: catalogdb
    restart: always
    ports:
     - "27017:27017"
    volumes:
     - mongo_data:/data/db
  basketdb:
    image: redis:alpine
    container_name: basketdb
    restart: always
    ports:
     - "6379:6379"
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
  catalog.api:
    container_name: catalog.api
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    depends_on:
    - catalogdb
    ports:
      - "8000:80"
  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    container_name: basket.api
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "GrpcSettings:DiscountUrl=http://discount.grpc"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
    - basketdb
    - rabbitmq
    ports:
      - "8001:80"
  discount.api:
    container_name: discount.api
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234"
    depends_on:
    - discountdb
    ports:
      - "8002:80"
  discount.grpc:
    container_name: discount.grpc
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    depends_on:
    - discountdb
    ports:
      - "8003:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234"
  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    container_name: ordering.api
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ConnectionStrings:OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=SwN12345678"     
        - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
        - orderdb
        - rabbitmq
    ports:
        - "8004:80"
  ocelotapigw:
    image: ${DOCKER_REGISTRY-}ocelotapigw
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile
    container_name: ocelotapigw
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
        - catalog.api
        - basket.api
        - discount.api
        - ordering.api
    ports:
      - "8010:80"

  shopping.aggregator:
    image: ${DOCKER_REGISTRY-}shoppingaggregator
    build:
      context: .
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile
    container_name: shopping.aggregator
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ApiSettings:CatalogUrl=http://catalog.api"
        - "ApiSettings:BasketUrl=http://basket.api"
        - "ApiSettings:OrderingUrl=http://ordering.api"
        - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
        - catalog.api
        - basket.api
        - ordering.api
    ports:
        - "8005:80"

volumes:
  mongo_data:
  portainer_data:
  postgres_data:





